{
  "Resources": {
    "photooriginbucket2B87E350": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-origin-bucket/Resource"
      }
    },
    "photooriginbucketPolicy7136A97C": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "photooriginbucket2B87E350"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "photocfOrigin1S3Origin0CE0268A",
                    "S3CanonicalUserId"
                  ]
                }
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "photooriginbucket2B87E350",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-origin-bucket/Policy/Resource"
      }
    },
    "photobucketB7DC68B2": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-bucket/Resource"
      }
    },
    "photobucketNotifications9107C8D6": {
      "Type": "Custom::S3BucketNotifications",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "photobucketB7DC68B2"
        },
        "NotificationConfiguration": {
          "LambdaFunctionConfigurations": [
            {
              "Events": [
                "s3:ObjectCreated:*"
              ],
              "LambdaFunctionArn": {
                "Fn::GetAtt": [
                  "registerFunctionD7F4E1AB",
                  "Arn"
                ]
              }
            },
            {
              "Events": [
                "s3:ObjectRemoved:*"
              ],
              "LambdaFunctionArn": {
                "Fn::GetAtt": [
                  "registerFunctionD7F4E1AB",
                  "Arn"
                ]
              }
            }
          ]
        }
      },
      "DependsOn": [
        "photobucketAllowBucketNotificationsToPhotographyStackregisterFunctionAD0F0E66C3E8E820"
      ],
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-bucket/Notifications/Resource"
      }
    },
    "photobucketPolicy4D3004CB": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "photobucketB7DC68B2"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "photocfOrigin2S3OriginABFFDD77",
                    "S3CanonicalUserId"
                  ]
                }
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "photobucketB7DC68B2",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-bucket/Policy/Resource"
      }
    },
    "photobucketAllowBucketNotificationsToPhotographyStackregisterFunctionAD0F0E66C3E8E820": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "registerFunctionD7F4E1AB",
            "Arn"
          ]
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        },
        "SourceArn": {
          "Fn::GetAtt": [
            "photobucketB7DC68B2",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-bucket/AllowBucketNotificationsToPhotographyStackregisterFunctionAD0F0E66"
      }
    },
    "photocfOrigin1S3Origin0CE0268A": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Identity for PhotographyStackphotocfOrigin176D11E35"
        }
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-cf/Origin1/S3Origin/Resource"
      }
    },
    "photocfOrigin2S3OriginABFFDD77": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Identity for PhotographyStackphotocfOrigin24C4935B2"
        }
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-cf/Origin2/S3Origin/Resource"
      }
    },
    "photocf6594D264": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "CacheBehaviors": [
            {
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "PathPattern": "/photos/*",
              "TargetOriginId": "PhotographyStackphotocfOrigin24C4935B2",
              "ViewerProtocolPolicy": "allow-all"
            }
          ],
          "DefaultCacheBehavior": {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "TargetOriginId": "PhotographyStackphotocfOrigin176D11E35",
            "ViewerProtocolPolicy": "allow-all"
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "photooriginbucket2B87E350",
                  "RegionalDomainName"
                ]
              },
              "Id": "PhotographyStackphotocfOrigin176D11E35",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "photocfOrigin1S3Origin0CE0268A"
                      }
                    ]
                  ]
                }
              }
            },
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "photobucketB7DC68B2",
                  "RegionalDomainName"
                ]
              },
              "Id": "PhotographyStackphotocfOrigin24C4935B2",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "photocfOrigin2S3OriginABFFDD77"
                      }
                    ]
                  ]
                }
              }
            }
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-cf/Resource"
      }
    },
    "objectsuploadAwsCliLayer0691165F": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Ref": "AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3BucketAEADE8C7"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3VersionKeyE415415F"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3VersionKeyE415415F"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Description": "/opt/awscli/aws"
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/objects-upload/AwsCliLayer/Resource",
        "aws:asset:path": "asset.e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68.zip",
        "aws:asset:property": "Content"
      }
    },
    "objectsuploadCustomResourceA38385CF": {
      "Type": "Custom::CDKBucketDeployment",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn"
          ]
        },
        "SourceBucketNames": [
          {
            "Ref": "AssetParametersa89bdca50891d5f240a3fe73c56632b2b11c6f347313913595e2f44f89120a39S3BucketE0C1AEC4"
          }
        ],
        "SourceObjectKeys": [
          {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersa89bdca50891d5f240a3fe73c56632b2b11c6f347313913595e2f44f89120a39S3VersionKey0EFF9E27"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersa89bdca50891d5f240a3fe73c56632b2b11c6f347313913595e2f44f89120a39S3VersionKey0EFF9E27"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ],
        "DestinationBucketName": {
          "Ref": "photooriginbucket2B87E350"
        },
        "Prune": true
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/objects-upload/CustomResource/Default"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "AssetParametersa89bdca50891d5f240a3fe73c56632b2b11c6f347313913595e2f44f89120a39S3BucketE0C1AEC4"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "AssetParametersa89bdca50891d5f240a3fe73c56632b2b11c6f347313913595e2f44f89120a39S3BucketE0C1AEC4"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "photooriginbucket2B87E350",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "photooriginbucket2B87E350",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersc24b999656e4fe6c609c31bae56a1cf4717a405619c3aa6ba1bc686b8c2c86cfS3Bucket55EFA30C"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersc24b999656e4fe6c609c31bae56a1cf4717a405619c3aa6ba1bc686b8c2c86cfS3VersionKey60329B70"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersc24b999656e4fe6c609c31bae56a1cf4717a405619c3aa6ba1bc686b8c2c86cfS3VersionKey60329B70"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "objectsuploadAwsCliLayer0691165F"
          }
        ],
        "Runtime": "python3.6",
        "Timeout": 900
      },
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
      ],
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
        "aws:asset:path": "asset.c24b999656e4fe6c609c31bae56a1cf4717a405619c3aa6ba1bc686b8c2c86cf",
        "aws:asset:property": "Code"
      }
    },
    "photoapi3D985D37": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "photo-api"
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-api/Resource"
      }
    },
    "photoapiCloudWatchRole13F2C753": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-api/CloudWatchRole/Resource"
      }
    },
    "photoapiAccount929A26F9": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "photoapiCloudWatchRole13F2C753",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "photoapi3D985D37"
      ],
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-api/Account"
      }
    },
    "photoapiDeployment59D5FB136bffa824cdefab894ac65ba25387dce0": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "photoapi3D985D37"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "photoapiOPTIONSCB47188B",
        "photoapiphotoGETC8691F62",
        "photoapiphotoOPTIONS86AB6139",
        "photoapiphotoPOST9C4F6588",
        "photoapiphotoAF422BBA"
      ],
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-api/Deployment/Resource"
      }
    },
    "photoapiDeploymentStageprod51E41482": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "photoapi3D985D37"
        },
        "DeploymentId": {
          "Ref": "photoapiDeployment59D5FB136bffa824cdefab894ac65ba25387dce0"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-api/DeploymentStage.prod/Resource"
      }
    },
    "photoapiOPTIONSCB47188B": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Fn::GetAtt": [
            "photoapi3D985D37",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "photoapi3D985D37"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-api/Default/OPTIONS/Resource"
      }
    },
    "photoapiphotoAF422BBA": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "photoapi3D985D37",
            "RootResourceId"
          ]
        },
        "PathPart": "photo",
        "RestApiId": {
          "Ref": "photoapi3D985D37"
        }
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-api/Default/photo/Resource"
      }
    },
    "photoapiphotoOPTIONS86AB6139": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "photoapiphotoAF422BBA"
        },
        "RestApiId": {
          "Ref": "photoapi3D985D37"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-api/Default/photo/OPTIONS/Resource"
      }
    },
    "photoapiphotoPOSTApiPermissionPhotographyStackphotoapi345D8F61POSTphoto83CCFD09": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "photoFunction158726C6",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "photoapi3D985D37"
              },
              "/",
              {
                "Ref": "photoapiDeploymentStageprod51E41482"
              },
              "/POST/photo"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-api/Default/photo/POST/ApiPermission.PhotographyStackphotoapi345D8F61.POST..photo"
      }
    },
    "photoapiphotoPOSTApiPermissionTestPhotographyStackphotoapi345D8F61POSTphoto22010917": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "photoFunction158726C6",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "photoapi3D985D37"
              },
              "/test-invoke-stage/POST/photo"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-api/Default/photo/POST/ApiPermission.Test.PhotographyStackphotoapi345D8F61.POST..photo"
      }
    },
    "photoapiphotoPOST9C4F6588": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "photoapiphotoAF422BBA"
        },
        "RestApiId": {
          "Ref": "photoapi3D985D37"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "photoFunction158726C6",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-api/Default/photo/POST/Resource"
      }
    },
    "photoapiphotoGETApiPermissionPhotographyStackphotoapi345D8F61GETphoto10CA37FF": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "photographyfunctionlist2E096DF1",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "photoapi3D985D37"
              },
              "/",
              {
                "Ref": "photoapiDeploymentStageprod51E41482"
              },
              "/GET/photo"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-api/Default/photo/GET/ApiPermission.PhotographyStackphotoapi345D8F61.GET..photo"
      }
    },
    "photoapiphotoGETApiPermissionTestPhotographyStackphotoapi345D8F61GETphoto17EEC6B2": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "photographyfunctionlist2E096DF1",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "photoapi3D985D37"
              },
              "/test-invoke-stage/GET/photo"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-api/Default/photo/GET/ApiPermission.Test.PhotographyStackphotoapi345D8F61.GET..photo"
      }
    },
    "photoapiphotoGETC8691F62": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "photoapiphotoAF422BBA"
        },
        "RestApiId": {
          "Ref": "photoapi3D985D37"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "photographyfunctionlist2E096DF1",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-api/Default/photo/GET/Resource"
      }
    },
    "photoFunctionServiceRoleD1A05907": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-Function/ServiceRole/Resource"
      }
    },
    "photoFunctionServiceRoleDefaultPolicy34D38414": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "photobucketB7DC68B2",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "photobucketB7DC68B2",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "photoFunctionServiceRoleDefaultPolicy34D38414",
        "Roles": [
          {
            "Ref": "photoFunctionServiceRoleD1A05907"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-Function/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "photoFunction158726C6": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters7f453a10399f35535f6725c42279208b30998798345123b50a674373ec79aa31S3BucketF31E1E8A"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters7f453a10399f35535f6725c42279208b30998798345123b50a674373ec79aa31S3VersionKey8A07D633"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters7f453a10399f35535f6725c42279208b30998798345123b50a674373ec79aa31S3VersionKey8A07D633"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "photoFunctionServiceRoleD1A05907",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "BUCKET": {
              "Ref": "photobucketB7DC68B2"
            }
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "photoFunctionServiceRoleDefaultPolicy34D38414",
        "photoFunctionServiceRoleD1A05907"
      ],
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-Function/Resource",
        "aws:asset:path": "asset.7f453a10399f35535f6725c42279208b30998798345123b50a674373ec79aa31",
        "aws:asset:property": "Code"
      }
    },
    "phototable3C1CC93A": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photo-table/Resource"
      }
    },
    "registerFunctionServiceRoleB5D80A1C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/register-Function/ServiceRole/Resource"
      }
    },
    "registerFunctionServiceRoleDefaultPolicy0F10C91A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "phototable3C1CC93A",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "registerFunctionServiceRoleDefaultPolicy0F10C91A",
        "Roles": [
          {
            "Ref": "registerFunctionServiceRoleB5D80A1C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/register-Function/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "registerFunctionD7F4E1AB": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersd2ecf97e8649f7e9ff01c034e2e70b8ab50d5e089a856798abcca8278d47d8f2S3Bucket306D767A"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersd2ecf97e8649f7e9ff01c034e2e70b8ab50d5e089a856798abcca8278d47d8f2S3VersionKey368AC462"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersd2ecf97e8649f7e9ff01c034e2e70b8ab50d5e089a856798abcca8278d47d8f2S3VersionKey368AC462"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "registerFunctionServiceRoleB5D80A1C",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "phototable3C1CC93A"
            }
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "registerFunctionServiceRoleDefaultPolicy0F10C91A",
        "registerFunctionServiceRoleB5D80A1C"
      ],
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/register-Function/Resource",
        "aws:asset:path": "asset.d2ecf97e8649f7e9ff01c034e2e70b8ab50d5e089a856798abcca8278d47d8f2",
        "aws:asset:property": "Code"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": [
          {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
        "Code": {
          "ZipFile": "exports.handler = (event, context) => {\n    // eslint-disable-next-line @typescript-eslint/no-require-imports, import/no-extraneous-dependencies\n    const s3 = new (require('aws-sdk').S3)();\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    const https = require('https');\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    const url = require('url');\n    log(JSON.stringify(event, undefined, 2));\n    const props = event.ResourceProperties;\n    if (event.RequestType === 'Delete') {\n        props.NotificationConfiguration = {}; // this is how you clean out notifications\n    }\n    const req = {\n        Bucket: props.BucketName,\n        NotificationConfiguration: props.NotificationConfiguration,\n    };\n    return s3.putBucketNotificationConfiguration(req, (err, data) => {\n        log({ err, data });\n        if (err) {\n            return submitResponse('FAILED', err.message + `\\nMore information in CloudWatch Log Stream: ${context.logStreamName}`);\n        }\n        else {\n            return submitResponse('SUCCESS');\n        }\n    });\n    function log(obj) {\n        console.error(event.RequestId, event.StackId, event.LogicalResourceId, obj);\n    }\n    // eslint-disable-next-line max-len\n    // adapted from https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-cfnresponsemodule\n    // to allow sending an error message as a reason.\n    function submitResponse(responseStatus, reason) {\n        const responseBody = JSON.stringify({\n            Status: responseStatus,\n            Reason: reason || 'See the details in CloudWatch Log Stream: ' + context.logStreamName,\n            PhysicalResourceId: event.PhysicalResourceId || event.LogicalResourceId,\n            StackId: event.StackId,\n            RequestId: event.RequestId,\n            LogicalResourceId: event.LogicalResourceId,\n            NoEcho: false,\n        });\n        log({ responseBody });\n        const parsedUrl = url.parse(event.ResponseURL);\n        const options = {\n            hostname: parsedUrl.hostname,\n            port: 443,\n            path: parsedUrl.path,\n            method: 'PUT',\n            headers: {\n                'content-type': '',\n                'content-length': responseBody.length,\n            },\n        };\n        const request = https.request(options, (r) => {\n            log({ statusCode: r.statusCode, statusMessage: r.statusMessage });\n            context.done();\n        });\n        request.on('error', (error) => {\n            log({ sendError: error });\n            context.done();\n        });\n        request.write(responseBody);\n        request.end();\n    }\n};"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 300
      },
      "DependsOn": [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
      ],
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
      }
    },
    "photographyfunctionlistServiceRoleDBAD774E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photography-function-list/ServiceRole/Resource"
      }
    },
    "photographyfunctionlistServiceRoleDefaultPolicy7DFD6B9E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "phototable3C1CC93A",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "photographyfunctionlistServiceRoleDefaultPolicy7DFD6B9E",
        "Roles": [
          {
            "Ref": "photographyfunctionlistServiceRoleDBAD774E"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photography-function-list/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "photographyfunctionlist2E096DF1": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersbde94d8f68520f754a50e262fcc411365f10f6495f9beb57d82af30fc0f758a0S3BucketD6C26782"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersbde94d8f68520f754a50e262fcc411365f10f6495f9beb57d82af30fc0f758a0S3VersionKey0F433593"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersbde94d8f68520f754a50e262fcc411365f10f6495f9beb57d82af30fc0f758a0S3VersionKey0F433593"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "photographyfunctionlistServiceRoleDBAD774E",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "phototable3C1CC93A"
            }
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "photographyfunctionlistServiceRoleDefaultPolicy7DFD6B9E",
        "photographyfunctionlistServiceRoleDBAD774E"
      ],
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/photography-function-list/Resource",
        "aws:asset:path": "asset.bde94d8f68520f754a50e262fcc411365f10f6495f9beb57d82af30fc0f758a0",
        "aws:asset:property": "Code"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAAA3VSwW4CIRD9lt5Z1Nr0XF1j0qSNRpveEUY7yoJhoGZD9t8LrKteeuLN8Jh5M48Jn4xf+eTpTVyokuo0itI64HHrhTyx2hryLkjP6r3ZANngJLAZEfhEOKA5sFu2DuRtcw/3Zi2caMCDy8Eq+HModVJRhR6t6VhuGmnK4zzIE5TbK+qPtdUo23u6jzumRbNTgsfcBFyDRKlcpn2IFtw3uBJvkz4N3pplMDI3ZDeQqAPumNQ2qL2zxvO4wDQw7kJhrRymGWdSAtG7AuPRFzF1frDMD/5jPJbpGE2rqOCsbdskCu9nWdwSTOSFEi977RiKhseN1WWH5byvYViAOONBeLiINlGB/OyMV4sGmDTZkGo/tMm67lE2sLTowWDcXBCwT/A/VuXLK3q0dcAdU60RjVU7Hr/ErtdbQDc4VOnsR5Vslhr57EK1xmJRx4xVwI80+p2M+fNL+oFHQqxckowN8E1//gHGkIR1ngIAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "PhotographyStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Parameters": {
    "AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3BucketAEADE8C7": {
      "Type": "String",
      "Description": "S3 bucket for asset \"e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68\""
    },
    "AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3VersionKeyE415415F": {
      "Type": "String",
      "Description": "S3 key for asset version \"e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68\""
    },
    "AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68ArtifactHashD9A515C3": {
      "Type": "String",
      "Description": "Artifact hash for asset \"e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68\""
    },
    "AssetParametersc24b999656e4fe6c609c31bae56a1cf4717a405619c3aa6ba1bc686b8c2c86cfS3Bucket55EFA30C": {
      "Type": "String",
      "Description": "S3 bucket for asset \"c24b999656e4fe6c609c31bae56a1cf4717a405619c3aa6ba1bc686b8c2c86cf\""
    },
    "AssetParametersc24b999656e4fe6c609c31bae56a1cf4717a405619c3aa6ba1bc686b8c2c86cfS3VersionKey60329B70": {
      "Type": "String",
      "Description": "S3 key for asset version \"c24b999656e4fe6c609c31bae56a1cf4717a405619c3aa6ba1bc686b8c2c86cf\""
    },
    "AssetParametersc24b999656e4fe6c609c31bae56a1cf4717a405619c3aa6ba1bc686b8c2c86cfArtifactHash85F58E48": {
      "Type": "String",
      "Description": "Artifact hash for asset \"c24b999656e4fe6c609c31bae56a1cf4717a405619c3aa6ba1bc686b8c2c86cf\""
    },
    "AssetParametersa89bdca50891d5f240a3fe73c56632b2b11c6f347313913595e2f44f89120a39S3BucketE0C1AEC4": {
      "Type": "String",
      "Description": "S3 bucket for asset \"a89bdca50891d5f240a3fe73c56632b2b11c6f347313913595e2f44f89120a39\""
    },
    "AssetParametersa89bdca50891d5f240a3fe73c56632b2b11c6f347313913595e2f44f89120a39S3VersionKey0EFF9E27": {
      "Type": "String",
      "Description": "S3 key for asset version \"a89bdca50891d5f240a3fe73c56632b2b11c6f347313913595e2f44f89120a39\""
    },
    "AssetParametersa89bdca50891d5f240a3fe73c56632b2b11c6f347313913595e2f44f89120a39ArtifactHash71B94B6F": {
      "Type": "String",
      "Description": "Artifact hash for asset \"a89bdca50891d5f240a3fe73c56632b2b11c6f347313913595e2f44f89120a39\""
    },
    "AssetParameters7f453a10399f35535f6725c42279208b30998798345123b50a674373ec79aa31S3BucketF31E1E8A": {
      "Type": "String",
      "Description": "S3 bucket for asset \"7f453a10399f35535f6725c42279208b30998798345123b50a674373ec79aa31\""
    },
    "AssetParameters7f453a10399f35535f6725c42279208b30998798345123b50a674373ec79aa31S3VersionKey8A07D633": {
      "Type": "String",
      "Description": "S3 key for asset version \"7f453a10399f35535f6725c42279208b30998798345123b50a674373ec79aa31\""
    },
    "AssetParameters7f453a10399f35535f6725c42279208b30998798345123b50a674373ec79aa31ArtifactHashF60B4A03": {
      "Type": "String",
      "Description": "Artifact hash for asset \"7f453a10399f35535f6725c42279208b30998798345123b50a674373ec79aa31\""
    },
    "AssetParametersd2ecf97e8649f7e9ff01c034e2e70b8ab50d5e089a856798abcca8278d47d8f2S3Bucket306D767A": {
      "Type": "String",
      "Description": "S3 bucket for asset \"d2ecf97e8649f7e9ff01c034e2e70b8ab50d5e089a856798abcca8278d47d8f2\""
    },
    "AssetParametersd2ecf97e8649f7e9ff01c034e2e70b8ab50d5e089a856798abcca8278d47d8f2S3VersionKey368AC462": {
      "Type": "String",
      "Description": "S3 key for asset version \"d2ecf97e8649f7e9ff01c034e2e70b8ab50d5e089a856798abcca8278d47d8f2\""
    },
    "AssetParametersd2ecf97e8649f7e9ff01c034e2e70b8ab50d5e089a856798abcca8278d47d8f2ArtifactHashF60EDF07": {
      "Type": "String",
      "Description": "Artifact hash for asset \"d2ecf97e8649f7e9ff01c034e2e70b8ab50d5e089a856798abcca8278d47d8f2\""
    },
    "AssetParametersbde94d8f68520f754a50e262fcc411365f10f6495f9beb57d82af30fc0f758a0S3BucketD6C26782": {
      "Type": "String",
      "Description": "S3 bucket for asset \"bde94d8f68520f754a50e262fcc411365f10f6495f9beb57d82af30fc0f758a0\""
    },
    "AssetParametersbde94d8f68520f754a50e262fcc411365f10f6495f9beb57d82af30fc0f758a0S3VersionKey0F433593": {
      "Type": "String",
      "Description": "S3 key for asset version \"bde94d8f68520f754a50e262fcc411365f10f6495f9beb57d82af30fc0f758a0\""
    },
    "AssetParametersbde94d8f68520f754a50e262fcc411365f10f6495f9beb57d82af30fc0f758a0ArtifactHashD96570E8": {
      "Type": "String",
      "Description": "Artifact hash for asset \"bde94d8f68520f754a50e262fcc411365f10f6495f9beb57d82af30fc0f758a0\""
    }
  },
  "Outputs": {
    "photoapiEndpointC8589D95": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "photoapi3D985D37"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "photoapiDeploymentStageprod51E41482"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}